image:
  name: docker/compose:1.25.4
  entrypoint: [""]

services:
  - docker:dind

stages:
  - build
  - test

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  API_IMAGE: $IMAGE:api
  NGINX_IMAGE: $IMAGE:nginx

before_script:
    - apk add --no-cache openssh-client bash
    - chmod +x ./setup_env.sh
    - bash ./setup_env.sh
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker pull $API_IMAGE || true
    - docker pull $NGINX_IMAGE || true
    - docker-compose -f docker-compose.ci.yml build
    - docker push $API_IMAGE
    - docker push $NGINX_IMAGE

test:
  stage: test
  image: $API_IMAGE
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: users
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: runner
    DATABASE_TEST_URL: postgres://runner:runner@postgres:5432/users
  script:
    - python3.8 -m venv env
    - source env/bin/activate
    - pip install -r requirements.txt
    - pip install flake8 isort pytest pytest-django
    - export DEBUG=1
    - pytest -p no:warnings
    - flake8 .
    - isort ./*/*.py --check-only
    - export DEBUG=0
    - python manage.py check --deploy --fail-level=WARNING
